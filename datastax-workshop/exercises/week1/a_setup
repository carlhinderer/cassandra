-----------------------------------------------------------------------------
| WEEK 1 - SETUP TASKS                                                      |
-----------------------------------------------------------------------------

- Creating DB Instance

    - First, we create our Astra account and DB instance:

        Database Name: workshops
        Keyspace Name: chatsandra


    - The command that is actually executed to create our keyspace:

        CREATE KEYSPACE chatsandra
        WITH REPLICATION = {'class': 'NetworkTopologyStrategy', 'replication_factor': 3};


    - To look at our keyspaces:

        DESC KEYSPACES;



- Creating Tables

    - First, we need to use our keyspace:

        USE chatsandra;


    - We'll create our 'users' table:

        CREATE TABLE IF NOT EXISTS users ( 
          email       TEXT,
          name        TEXT,
          password    TEXT,
          user_id     UUID,
          PRIMARY KEY (( email ))
        );


    - To view all the tables in our keyspace:

        DESC TABLES;


    - We'll store posts both by user and room:

        CREATE TABLE IF NOT EXISTS posts_by_user ( 
          user_id     UUID, 
          post_id     TIMEUUID,
          room_id     TEXT, 
          text        TEXT,
          PRIMARY KEY ((user_id), post_id)
        ) WITH CLUSTERING ORDER BY (post_id DESC);

        CREATE TABLE IF NOT EXISTS posts_by_room ( 
          room_id     TEXT, 
          post_id     TIMEUUID,
          user_id     UUID,
          text        TEXT,
          PRIMARY KEY ((room_id), post_id)
        ) WITH CLUSTERING ORDER BY (post_id DESC);



- Inserting Users

    - We are hardcoding the UUIDs to make following along with these exercises easier.

        INSERT INTO users (
          email,    // TEXT
          name,     // TEXT
          password, // TEXT
          user_id   // UUID: id of a user
        )
        VALUES (
          'otzi@mail.com',
          'Otzi Oney',
          '123456',
          11111111-1111-1111-1111-111111111111
        );

        INSERT INTO users (email, name, password, user_id) VALUES (
          'fred@qmail.net', 'Fred Fivey', 'qwerty',
          55555555-5555-5555-5555-555555555555
        );

        INSERT INTO users (email, name, password, user_id) VALUES (
          'nina@zmail.org', 'Nina Niney', 's3cr3t',
          99999999-9999-9999-9999-999999999999
        );



- Inserting Posts By User

    - We are hardcoding the UUIDs and TIMEUUIDs to make the exercises easier to follow.

        INSERT INTO posts_by_user (
          user_id,  // UUID: unique id for a user
          post_id,  // TIMEUUID: unique uuid + timestamp
          room_id,  // TEXT: id of a chat room
          text      // TEXT: the post content itself
        )
        VALUES (
          11111111-1111-1111-1111-111111111111,
          22222222-5cff-11ec-be16-1fedb0dfd057,
          '#hiking',
          'I climbed Mt. Gumbo yesterday ...'
        );

        INSERT INTO posts_by_user (user_id, post_id, room_id, text) VALUES (
          11111111-1111-1111-1111-111111111111,
          77777777-5cff-11ec-be16-1fedb0dfd057,
          '#running', 'Who likes marathons here?'
        );

        INSERT INTO posts_by_user (user_id, post_id, room_id, text) VALUES (
          11111111-1111-1111-1111-111111111111,
          aaaaaaaa-5cff-11ec-be16-1fedb0dfd057,
          '#hiking', '... and Mt. Gumbo was easy!!!'
        );

        INSERT INTO posts_by_user (user_id, post_id, room_id, text) VALUES (
          55555555-5555-5555-5555-555555555555,
          bbbbbbbb-5cff-11ec-be16-1fedb0dfd057,
          '#hiking', 'For us humans Gumbo is a tough one...!'
        );

        INSERT INTO posts_by_user (user_id, post_id, room_id, text) VALUES (
          99999999-9999-9999-9999-999999999999,
          cccccccc-5cff-11ec-be16-1fedb0dfd057,
          '#running', 'I just love marathons.'
        );

        INSERT INTO posts_by_user (user_id, post_id, room_id, text) VALUES (
          11111111-1111-1111-1111-111111111111,
          eeeeeeee-5cff-11ec-be16-1fedb0dfd057,
          '#running', 'Same here!'
        );

        INSERT INTO posts_by_user (user_id, post_id, room_id, text) VALUES (
          55555555-5555-5555-5555-555555555555,
          ffffffff-5cff-11ec-be16-1fedb0dfd057,
          '#hiking', 'I have to buy new boots.'
        );



- Inserting Posts By Room

    - We are hardcoding the UUIDs and TIMEUUIDs to make the exercises easier to follow.

        INSERT INTO posts_by_room (user_id, post_id, room_id, text) VALUES (
          11111111-1111-1111-1111-111111111111,
          22222222-5cff-11ec-be16-1fedb0dfd057,
          '#hiking', 'I climbed Mt. Gumbo yesterday ...'
        );

        INSERT INTO posts_by_room (user_id, post_id, room_id, text) VALUES (
          11111111-1111-1111-1111-111111111111,
          77777777-5cff-11ec-be16-1fedb0dfd057,
          '#running', 'Who likes marathons here?'
        );
        INSERT INTO posts_by_room (user_id, post_id, room_id, text) VALUES (
          11111111-1111-1111-1111-111111111111,
          aaaaaaaa-5cff-11ec-be16-1fedb0dfd057,
          '#hiking', '... and Mt. Gumbo was easy!!!'
        );
        INSERT INTO posts_by_room (user_id, post_id, room_id, text) VALUES (
          55555555-5555-5555-5555-555555555555,
          bbbbbbbb-5cff-11ec-be16-1fedb0dfd057,
          '#hiking', 'For us humans Gumbo is a tough one...!'
        );
        INSERT INTO posts_by_room (user_id, post_id, room_id, text) VALUES (
          99999999-9999-9999-9999-999999999999,
          cccccccc-5cff-11ec-be16-1fedb0dfd057,
          '#running', 'I just love marathons.'
        );
        INSERT INTO posts_by_room (user_id, post_id, room_id, text) VALUES (
          11111111-1111-1111-1111-111111111111,
          eeeeeeee-5cff-11ec-be16-1fedb0dfd057,
          '#running', 'Same here!'
        );
        INSERT INTO posts_by_room (user_id, post_id, room_id, text) VALUES (
          55555555-5555-5555-5555-555555555555,
          ffffffff-5cff-11ec-be16-1fedb0dfd057,
          '#hiking', 'I have to buy new boots.'
        );



- Reading Data

    - To read from the 'posts_by_user' table:

        SELECT post_id, room_id, text FROM posts_by_user
        WHERE user_id = 11111111-1111-1111-1111-111111111111;


    - To read from the 'posts_by_room' table:

        SELECT user_id, text FROM posts_by_room
        WHERE room_id = '#hiking';


    - The 'dateOf' function is useful for extracting the timestamp from a TIMEUUID.

        SELECT user_id, dateOf(post_id) AS post_date, text FROM posts_by_room
        WHERE room_id = '#hiking';



- Updating Data

    - To update the 'posts_by_user' table:

        UPDATE posts_by_user 
        SET text = '... and Mt. Gumbo was NOT SO easy!!!' 
        WHERE user_id = 11111111-1111-1111-1111-111111111111
        AND post_id = aaaaaaaa-5cff-11ec-be16-1fedb0dfd057;


    - Note that in Cassandra, UPDATE and INSERT operations are almost the same, so this query will have
        the same result:

        INSERT INTO posts_by_room (room_id, post_id, text) VALUES (
          '#hiking',
          aaaaaaaa-5cff-11ec-be16-1fedb0dfd057,
          '... and Mt. Gumbo was NOT SO easy!!!'
        );



- Deleting Data

    - To delete a post:

        DELETE FROM posts_by_user
        WHERE user_id = 55555555-5555-5555-5555-555555555555
        AND post_id = bbbbbbbb-5cff-11ec-be16-1fedb0dfd057;

        DELETE FROM posts_by_room
        WHERE room_id = '#hiking'
        AND post_id = bbbbbbbb-5cff-11ec-be16-1fedb0dfd057;


    - Generally speaking, it's best to perform as few delete operations as possible on the largest
        amount of data.  To delete all the data in the table, just TRUNCATE the table.  To delete
        all the rows in a partition, just DELETE the entire partition.
